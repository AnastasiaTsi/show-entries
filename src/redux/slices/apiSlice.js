import { createAsyncThunk, createSlice } from "@reduxjs/toolkit";
import axios from "axios";

const apiUrl = "https://api.publicapis.org/entries";

// The function below is called a thunk and allows us to perform async logic. It
// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This
// will call the thunk with the `dispatch` function as the first argument. Async
// code can then be executed and other actions can be dispatched. Thunks are
// typically used to make async requests.

export const apiGET = createAsyncThunk("api/get", async (payload, thunkAPI) => {
  try {
    const response = await axios.get(apiUrl);

    return await response.data;
  } catch (error) {
    return thunkAPI.rejectWithValue({ error: error.message });
  }
});

export const apiSlice = createSlice({
  name: "api",
  initialState: { entries: [], count: 0 },
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {},
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  extraReducers: (builder) => {
    builder.addCase(apiGET.fulfilled, (state, { payload }) => {
      state.entries = payload.entries;
      state.count = payload.count;
    });
  },
});

export default apiSlice.reducer;
